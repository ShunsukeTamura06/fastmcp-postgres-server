version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    container_name: fastmcp-postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-testdb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastMCP PostgreSQL Server
  fastmcp-postgres-server:
    build: .
    container_name: fastmcp-postgres-server
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-testdb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8001
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - postgres-network

  # 開発用: デバッグモードでの実行
  fastmcp-postgres-server-dev:
    build: .
    container_name: fastmcp-postgres-server-dev
    ports:
      - "8002:8001"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-testdb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8001
      - DEBUG=true
    volumes:
      - .:/app
      - ./logs:/app/logs
    command: python server.py
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    profiles:
      - dev
    networks:
      - postgres-network

  # pgAdmin (データベース管理用)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fastmcp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - admin
    networks:
      - postgres-network

networks:
  postgres-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  logs: